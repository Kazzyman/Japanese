switch CurrenActivity {
	case "Romaji_Prompt":
		//check_for_match()
	case "Romaji+Kata_Prompt":

	case "Kata_Prompt-Respond-w-Hira|Romaji":
	}
	giveHintInResponseToSingleQuestionMarkContextSensitiveDir(aCard.KeyH, aCard.Hint1h, aCard.Hint2k, aCard.Hint3TT) // dole-out a hint

Finish/Proof-read singleQuestionMarksHints.go

Second chance on Oops! , then give a hint for a third try, but then skip logging as a fineOn

Add Japanese words (with Kanji) to the menus etc. Then ...
... Create a struct, a file-of-cards, with kanji chars, both words and phrases, to implement an activity similar to 1-4



try making the meat func polymorphic

polymorphic hint functionality ??? or simply finish/use giveAhint_from_aCard.go

Finish composing hint content in data.go:
... note:
... we will probably never want to be prompted with Hiragana chars, ever! Because, that would just be too easy ...
... it is more useful to only see a Katakana or Romaji prompt, so we would only ever want a 'Hiragana hint'.
//

Enact the method for deploying the hint for romaji prompts using that last hint line only ???



Try refining drill lines in fifth activity, Kata, Hira, and Romaji (respond to each with Hiragana)

/*
Chars from the blue card: 46+15+25+21=107 : if we include all the suffixed combination "chars".
... 46*2=92 would be the total for the complete simple hiragana+katakana set; of base chars.
 ... doubling it all (the 107 from above) for katakana gives a grand total of 214 Japanese chars excluding the various punctuation characters.
*/